% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smoothing-functions.R
\name{kernelDensity}
\alias{kernelDensity}
\alias{kernelSmooth}
\title{Kernel density estimation}
\usage{
kernelDensity(x, xgrid = NULL, bw = NULL, kernel = "gaussian", rescale = TRUE)

kernelSmooth(
  x,
  y,
  xgrid = NULL,
  bw = NULL,
  kernel = "gaussian",
  rescale = TRUE,
  LOO = FALSE
)
}
\arguments{
\item{x}{A numeric vector or numeric matrix of predictors.}

\item{xgrid}{A numeric vector or numeric matrix with \code{ncol(xgrid) = ncol(x)} of points at which the density is estimated.}

\item{bw}{Bandwidth: a scalar or a vector of the same length as \code{ncol(x)}.}

\item{kernel}{Which kernel to use? Passed to \code{kernelWeights}.}

\item{rescale}{Passed to \code{kernelWeights}.}

\item{y}{A numeric vector of responses (dependent variable).}

\item{LOO}{Logical: return the leave-one-out estimator?}
}
\value{
\code{kernelDensity}: a numeric vector of kernel density estimator of \code{x} evaluated at \code{xgrid}.
\code{kernelSmooth}: a numeric vector of kernel regression estimator values (best predictor of \code{y} given \code{x}) evaluated at \code{xgrid}.
}
\description{
Kernel density estimation
}
\examples{
set.seed(1)
x <- rnorm(110)
y <- x^2 + rnorm(110)
xgrid <- seq(-5, 5, length.out = 301)
opt.dcv <- bw.CV(x = x)
opt.lscv <- bw.CV(x = x, y = y, CV = "LSCV")
myfhat       <- kernelDensity(x = x, xgrid = xgrid, bw = opt.dcv, kernel = "gaussian")
myfhat.under <- kernelDensity(x = x, xgrid = xgrid, bw = opt.dcv * 0.2, kernel = "gaussian")
myfhat.over  <- kernelDensity(x = x, xgrid = xgrid, bw = opt.dcv * 5, kernel = "gaussian")
mymuhat       <- kernelSmooth(x = x, y = y, xgrid = xgrid, bw = opt.lscv)
mymuhat.under <- kernelSmooth(x = x, y = y, xgrid = xgrid, bw = opt.lscv * 0.2)
mymuhat.over  <- kernelSmooth(x = x, y = y, xgrid = xgrid, bw = opt.lscv * 5)
plot(xgrid, myfhat, type = "l", ylim = c(0, max(myfhat.under)), ylab = "Density", xlab = "x",
  bty = "n", lwd = 2, main = "Effect of the bandwidth on the density estimator")
lines(xgrid, dnorm(xgrid), lty = 2, lwd = 2)
rug(x)
lines(xgrid, myfhat.under, col = "red", lwd = 2)
lines(xgrid, myfhat.over, col = "blue", lwd = 2)
legend("topright", paste0(c("True density", "Optimal (b=", "Under-smth (b=", "Over-smth (b="),
    c("", sprintf("\%1.3f", bw.rot(x) * c(0.2, 1, 5))), c("", rep(")", 3))), bty = "n",
  col = c("black", "black", "red", "blue"), lty = c(2, 1, 1, 1), lwd = 2)
plot(x, y, bty = "n")
lines(xgrid, mymuhat, col = "black", lwd = 2)
lines(xgrid, xgrid^2, col = "black", lwd = 2, lty = 2)
lines(xgrid, mymuhat.under, col = "red", lwd = 2)
lines(xgrid, mymuhat.over, col = "blue", lwd = 2)
legend("top", paste0(c("True law of y | x", "Optimal (b=", "Under-smth (b=", "Over-smth (b="),
    c("", sprintf("\%1.3f", bw.rot(x) * c(0.2, 1, 5))), c("", rep(")", 3))), bty = "n",
  col = c("black", "black", "red", "blue"), lty = c(2, 1, 1, 1), lwd = 2)
}
\seealso{
\code{\link{kernelWeights}} for kernel weight matrix construction.
}
